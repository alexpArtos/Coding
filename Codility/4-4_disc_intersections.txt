Name: Disc Intersections
Level: Medium
Chapter: 4
Complexity: O(n log n)


using System;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can use Console.WriteLine for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in C# 5.0 with .NET 4.5 (Mono)
        
        int n = A.Length;
        long[] min = new long[n];
        long[] max = new long[n];
        
        for (int i = 0; i < n; i++){ 
            min[i] = i - (long) A[i]; // to avoid overflow
            max[i] = i + (long) A[i];
        }
        
        Array.Sort(min);
        Array.Sort(max);
        
        int cur_max = 0;
        
        // at the start, the first circle is open
        int open = 1;
        int count = 0;
        int MAX = 10000000;
        int cur_min = 1;
        while ( (cur_min < n) && (cur_max < n) ) {
            if (min[cur_min] > max[cur_max]) {
                // this circle begins after the end of cur_max
                // and does not intersect it.
                // close one circle and advance for the next                
                open--;
                cur_max++;
            }

            // a new circle starts before the next close
            // this circle intersects all the current open circles 
            // and becomes open as well
            if (min[cur_min] <= max[cur_max]) { 
                count += open;
                if (count > MAX) return -1;
                cur_min++;
                open++;
            }
        }
                
        return count;
    }
}