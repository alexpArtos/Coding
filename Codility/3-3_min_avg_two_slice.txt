Name: Min Avg Two Slice
Level: Medium
Chapter: 3
Complexity: O(n)

using System;
// you can also use other imports, for example:
// using System.Collections.Generic;

// you can use Console.WriteLine for debugging purposes, e.g.
// Console.WriteLine("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // write your code in C# 5.0 with .NET 4.5 (Mono)
        int N = A.Length;
        int[] minSliceStart = new int[N];
                
        // clever trick for this: min-slice must be exactly 2 or 3 elements long
        // proof: 
        // any larger slice can be broken down in slices of 2 or 3 elements
        // the average of a slice composed of mini slices is the average of their averages
        // if any component has a larger value than the average, 
        // there must be another component with a smaller average.
        // this contradicts the assumed minimality, 
        // so all components have the same global minimal average
        // therefore, there is always a component of size 2 or 3 that is minimal
        
        // at each point, we can have only two slices starting there that matter to us
        
        double min_slice = (A[0] + A[1]) / 2.0;    
        int best_pos = 0;
        double slice;
        
        for (int i = 0; i < N-1; i++) {
            // checking 2-slices
            if (i > 0) {
                slice = (A[i] + A[i+1])/2.0;
                if (slice < min_slice) {
                    min_slice = slice;
                    best_pos = i;
                }
            }
            // checking 3-slices
            if (i < N-2) {
                slice = (A[i] + A[i+1] + A[i+2]) / 3.0;
                if (slice < min_slice) {
                    min_slice = slice;
                    best_pos = i;
                }                
            }
        }
        return best_pos;
    }
}
